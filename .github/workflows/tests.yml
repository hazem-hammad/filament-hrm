name: Tests

on:
  push:
    branches: [ testing ]
  pull_request:
    branches: [ testing ]

jobs:
  tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, dom, fileinfo, mysql, gd, zip, curl, openssl, pdo, pdo_mysql, tokenizer, xml, ctype, json, bcmath
        coverage: none

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Configure environment for CI
      run: |
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=testing" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=password" >> .env
        echo "APP_ENV=testing" >> .env

    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Validate composer files
      run: composer validate --strict

    - name: Update Composer to latest version
      run: composer self-update

    - name: Install dependencies (without scripts)
      run: composer install --no-scripts --no-interaction --prefer-dist --optimize-autoloader

    - name: Generate key
      run: php artisan key:generate

    - name: Run package discovery
      run: php artisan package:discover --ansi

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database
      run: |
        mysql --version
        mysql --host=127.0.0.1 --port=3306 -uroot -ppassword -e "CREATE DATABASE IF NOT EXISTS testing;"

    - name: Run database migrations
      run: php artisan migrate --force

    - name: Create Unit test directory (if needed)
      run: mkdir -p tests/Unit
      
    - name: Execute tests via PHPUnit/Pest
      run: php artisan test